#! /usr/bin/env python


import Params, Request, Response, asynchrolets, weakref


DOWNLOADS = weakref.WeakValueDictionary()


def transaction( client, address ):

  print 'Accepted request from %s:%i' % address

  request = Request.HttpRequest()
  while not request:
    yield 'RECV', client
    request.recv( client )

  try:

    while request in DOWNLOADS:
      protocol = DOWNLOADS[ request ]
      if not protocol.canjoin():
        del DOWNLOADS[ request ]
        continue
      if protocol:
        print 'Joined running download'
        break
      yield 'WAIT', None
    else:
      protocol = DOWNLOADS[ request ] = request.getprotocol()
      server = protocol.getsocket()
      while not protocol:
        if protocol.cansend():
          yield 'SEND', server
          protocol.send( server )
        else:
          yield 'RECV', server
          protocol.recv( server )

    response = protocol.getresponse( request )
    server = protocol.getsocket()
  except:
    response = Response.ExceptionResponse()
    server = None

  while not response:
    if response.cansend():
      yield 'SEND', client
      response.send( client )
    elif response.canrecv():
      yield 'RECV', server
      response.recv( server )
    else:
      yield 'WAIT', .5


asynchrolets.spawn( transaction, port=Params.PORT, timeout=Params.TIMEOUT, debug=Params.DEBUG )

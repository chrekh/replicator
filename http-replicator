#! /usr/bin/env python


import Params, Request, Response, fiber, weakref


DOWNLOADS = weakref.WeakValueDictionary()


def transaction( client, address ):

  print 'Accepted request from %s:%i' % address

  request = Request.HttpRequest()
  while not request.Protocol:
    yield fiber.RECV( client, Params.TIMEOUT )
    request.recv( client )

  try:
    while request in DOWNLOADS:
      protocol = DOWNLOADS[ request ]
      if protocol.Response:
        if issubclass( protocol.Response, Response.DataResponse ):
          print 'Joined running download'
          break
        del DOWNLOADS[ request ]
      else:
        yield fiber.WAIT()
    else:
      print 'Switching to', request.Protocol.__name__
      protocol = DOWNLOADS[ request ] = request.Protocol( request )
      server = protocol.socket()
      while not protocol.Response:
        if protocol.hasdata():
          yield fiber.SEND( server, Params.TIMEOUT )
          protocol.send( server )
        else:
          yield fiber.RECV( server, Params.TIMEOUT )
          protocol.recv( server )
    print 'Switching to', protocol.Response.__name__
    response = protocol.Response( protocol, request )
    server = protocol.socket()
  except Exception, e:
    print 'Switching to ExceptionResponse'
    response = Response.ExceptionResponse( e, request )

  while not response.Done:
    if response.hasdata():
      yield fiber.SEND( client, Params.TIMEOUT )
      response.send( client )
    elif response.needwait():
      yield fiber.WAIT( response.needwait() )
    else:
      yield fiber.RECV( server, Params.TIMEOUT )
      response.recv( server )

  print 'Done'


fiber.spawn( transaction, Params.PORT, Params.DEBUG, Params.LOG )

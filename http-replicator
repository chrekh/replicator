#! /usr/bin/python


import Params, Request, Response, asynchrolets, weakref


DOWNLOADS = weakref.WeakValueDictionary()

def transaction( client, address ):

  print 'Accepted request from %s:%i' % address

  request = Request.Http()
  while not request:
    yield 'RECV', client
    request << client

  try:
    while request in DOWNLOADS:
      protocol = DOWNLOADS[ request ]
      if not protocol.canjoin():
        del DOWNLOADS[ request ]
        continue
      if protocol:
        print 'Joined running download'
        break
      yield 'WAIT', None
    else:
      protocol = DOWNLOADS[ request ] = request.getprotocol()
      while not protocol:
        server = protocol.getsocket()
        if protocol.cansend():
          yield 'SEND', server
          protocol >> server
        else:
          yield 'RECV', server
          protocol << server

    response = protocol.getresponse( request )
  except:
    response = Response.Exception()

  while not response:
    if response.cansend():
      yield 'SEND', client
      response >> client
    elif response.canrecv():
      server = protocol.getsocket()
      yield 'RECV', server
      response << server
    else:
      yield 'WAIT', .5


asynchrolets.spawn( transaction, port=Params.PORT, timeout=Params.TIMEOUT )
